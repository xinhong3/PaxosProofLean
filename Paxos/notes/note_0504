example (h1: Phase2b a sent sent') (hnv: ∀ v: Value, ¬VotedForIn sent a v b) : ∀ v, ¬VotedForIn sent' a v b := by

To prove this we acutally need the whole definition of WontVoteIn, because not VoteForIn simply means it's has not voted, doesn't mean it WONT vote in the future.

For example, this could happen when the acceptor a is ABOUT to vote for value v and ballot b in Phase2b.

Therefore to prove SafeAtStable for Phase2b, we do need WontVoteIn.


0506: 

Justification with If-than-else, split_ifs could be used. Otherwise, we could manually define the hypothesis, and use `rw [if_pos h_pos] at hcase`.

A lot of repetition in SafeAtStable, especially with intro and unfold, not sure how to use smt for this at the moment. It's giving out errors:

"incorrect number of universe levels Set"

There's no resource online for this issue